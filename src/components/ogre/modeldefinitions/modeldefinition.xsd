<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xsd:element name="model">
		<xsd:complexType>
			<xsd:attribute name="name" type="xsd:string" use="required"/> 
			<xsd:attribute name="rotation" type="xsd:string" use="optional"/> 
			<xsd:attribute name="usescaleof" type="usescaleofEnum" use="optional"/> 
			<xsd:attribute name="scale" type="xsd:float" use="optional"/> 
			<xsd:attribute name="showcontained" type="xsd:boolean" use="optional"/> 
			<xsd:attribute name="contentoffset" type="xsd:string" use="optional"/> 
			<xsd:attribute name="renderingdistance" type="xsd:float" use="optional"/> 
			<xsd:element name="rotation" use="optional">
				<xsd:attribute name="x" type="xsd:string" use="required"/> 
				<xsd:attribute name="y" type="xsd:string" use="required"/> 
				<xsd:attribute name="z" type="xsd:string" use="required"/> 
				<!-- how do we specify that at least one of the following must be present, but not both? -->
				<xsd:attribute name="degrees" type="xsd:float" use="optional"/> 
				<xsd:attribute name="radians" type="xsd:boolean" use="optional"/> 
			</xsd:element>
			<xsd:element name="submodels">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="submodel">
							<xsd:attribute name="mesh" type="xsd:string" use="required"/> 
							<xsd:complexType>
								<xsd:element name="parts">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="part">
												<xsd:attribute name="name" type="xsd:string" use="required"/> 
												<xsd:attribute name="show" type="xsd:boolean" use="required"/> 
												<xsd:attribute name="group" type="xsd:string" use="optional"/> 
												<xsd:complexType>
													<xsd:element name="subentities">
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="subentity">
																	<xsd:attribute name="name" type="xsd:string" use="required"/> 
																	<xsd:attribute name="material" type="xsd:string" use="optional"/> 
																</xsd:element>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element>
													<xsd:element name="lights">
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="light">
																	<xsd:attribute name="name" type="xsd:string" use="required"/> 
																	<xsd:attribute name="bone" type="xsd:string" use="required"/> 
																	
																	<xsd:attribute name="material" type="xsd:string" use="optional"/> 
																</xsd:element>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element>
												</xsd:complexType>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>					
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="actions">
				<xsd:complexType>
					<xsd:sequence>					
						<xsd:element name="action">
							<xsd:complexType>
								<xsd:attribute name="name" type="xsd:string" use="required"/> 
								<xsd:attribute name="speed" type="xsd:float" use="optional"/> 
								<xsd:element name="animations">
									<xsd:complexType>
										<xsd:sequence>					
											<xsd:element name="animationpart">
												<xsd:attribute name="name" type="xsd:string" use="required"/> 
												<xsd:attribute name="weight" type="xsd:string" use="required"/> 
											</xsd:element>
										</xsd:sequence>					
									</xsd:complexType>
								</xsd:element>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>					
				</xsd:complexType>
			</xsd:element>	
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="usescaleofEnum">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="height" />
			<xsd:enumeration value="width" />
			<xsd:enumeration value="depth" />
			<xsd:enumeration value="none" />
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
