#ifndef MODELREPRESENTATIONHUMANOID_H_
#define MODELREPRESENTATIONHUMANOID_H_

#include "components/ogre/model/ModelRepresentation.h"


namespace Ember
{
class SmartBodyManager;
class SmartBodyRepresentation;

namespace OgreView
{
class Scene;

namespace Model
{

class ActionDefinition;
struct SoundDefinition;
class Model;

/**
 @brief A model representation that is specialized for humanoid character.

 The common animations (locomotion, gestures, ...) are generated by SmartBody library.

 @author CÃ©line NOEL <celine.noel.7294@gmail.com>

 */
class ModelRepresentationHumanoid: public ModelRepresentation
{
public:

	/**
	 * @brief Ctor.
	 * @param entity The entity instance to bind to.
	 * @param model The model instance used.
	 * @param scene The scene to which the entity belongs.
	 * @param mapping The model mapping tied to the model.
	 * @param sbManager A pointer to the SmartBody Manager.
	 */
	ModelRepresentationHumanoid(EmberEntity& entity, Model& model, Scene& scene, EntityMapping::EntityMapping& mapping, SmartBodyManager& sbManager);

	/**
	 * @brief Dtor.
	 */
	virtual ~ModelRepresentationHumanoid(void);


	/**
	 * @brief The two following return the name of this class.
	 */
	const std::string& getType(void) const;
	static const std::string& getTypeNameForClass(void);


protected:

	/**
	 * @brief The corresponding SmartBody character.
	 */
	SmartBodyRepresentation *mCharacter;

	/**
	 * @brief A reference to the SmartBodyManager.
	 */
	SmartBodyManager& mSbManager;

	/**
	 * @brief The type name for the class.
	 */
	static std::string sTypeName;

	/**
	* @brief Create the character representation in SmartBody.
	*/
	void createSmartBodyCharacter(void);
};

}
}
}
#endif /* MODELREPRESENTATION_H_ */
