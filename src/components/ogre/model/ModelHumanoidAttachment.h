#ifndef MODELHUMANOIDATTACHMENT_H
#define MODELHUMANOIDATTACHMENT_H

#include "components/ogre/model/ModelAttachment.h"


namespace Ember
{

namespace OgreView
{

namespace Model
{
/**
 * @brief Attachment for a ModelRepresentationHumanoid instance.
 *
 * Use this attachment when you have a ModelHumanoidRepresentation you need to attach to an entity.
 * This class derives from ModelAttachment. It overrides setPosition(): when an model is moved through SmartBody, the movement has to
 * be smoothed in order to seem natural. Consequently, the position retrieved from the server must be adjusted every frame to fit the 
 * animation. 
 */
class ModelHumanoidAttachment: public ModelAttachment
{
public:

	/**
	 * @brief Ctor.
	 */
	ModelHumanoidAttachment(EmberEntity& parentEntity, ModelRepresentation& modelRepresentation, INodeProvider* nodeProvider, const std::string& pose = "");
	
	/**
	 * @bried Dtor.
	 */
	virtual ~ModelHumanoidAttachment();


	/**
	 * @brief Sets the position and the orientation of the node.
	 * When using SmartBody, this method retrieves the coordinates of the base joint in the character's skeleton to know where the node 
	 * should actually be. Thus, the acceleration and deceleration effects generated by SmartBody should be rendered.
	 * Overrides ModelAttachment:setPosition().
	 */
	virtual void setPosition(const WFMath::Point<3>& position, const WFMath::Quaternion& orientation, const WFMath::Vector<3>& velocity);

};

}
}
}

#endif