$#include "required.h"


$pfile "Carpenter.pkg"


$pfile "AvatarCamera.pkg"
$pfile "AvatarController.pkg"
$pfile "Avatar.pkg"
$pfile "EmberEntityFactory.pkg"

$pfile "EmberEntity.pkg"
$pfile "EmberPhysicalEntity.pkg"
$pfile "AvatarEmberEntity.pkg"
$pfile "WorldEmberEntity.pkg"

$pfile "Environment.pkg"


$pfile "GUIManager.pkg"
//$pfile "MousePicker.pkg"
$pfile "TerrainArea.pkg"
$pfile "TerrainEditor.pkg"
$pfile "MotionManager.pkg"

$pfile "Widget.pkg"
$pfile "IconBase.pkg"
$pfile "IconBar.pkg"
$pfile "EntityEditor.pkg"
$pfile "StackableContainer.pkg"
$pfile "ConsoleAdapter.pkg"
$pfile "ColouredListItem.pkg"
$pfile "AssetsManager.pkg"
$pfile "Compass.pkg"


$pfile "Icon.pkg"
$pfile "IconManager.pkg"

$pfile "EntityIconSlot.pkg"
$pfile "EntityIcon.pkg"
$pfile "EntityIconManager.pkg"
$pfile "EntityIconDragDropTarget.pkg"

$pfile "Model.pkg"
$pfile "SubModel.pkg"
$pfile "ModelDefinition.pkg"
$pfile "IInputAdapter.pkg"
$pfile "Jesus.pkg"

$pfile "MathConverter.pkg"


$pfile "SimpleRenderContext.pkg"
$pfile "MovableObjectRenderer.pkg"
$pfile "OgreEntityRenderer.pkg"
$pfile "ModelRenderer.pkg"
$pfile "ListHolder.pkg"
//$pfile "MaterialPicker.pkg"

$pfile "IWorldPickListener.pkg"
$pfile "EntityWorldPickListener.pkg"

$pfile "ModelDefinitionManager.pkg"
$pfile "ModelDefinitionAtlasComposer.pkg"

$pfile "EntityMoveManager.pkg"

$pfile "GUIAdapter.pkg"
$pfile "EntityRecipe.pkg"
$pfile "EntityRecipeManager.pkg"
$pfile "EntityCreator.pkg"

$pfile "stdlib.pkg"



$pfile "Vector3Adapter.pkg"
$pfile "QuaternionAdapter.pkg"

$pfile "Map.pkg"


$pfile "OgreInfo.pkg"
$pfile "AttributeObserver.pkg"

//$pfile "EntityCEGUITexture.pkg"

//$pfile "LuaConnector.pkg"




namespace EmberOgre {
class EmberOgre 
{
	static EmberOgre& getSingleton( void );

	Avatar* getAvatar() const;
	//Ogre::SceneManager* getSceneManager() const;
	//TerrainGenerator* getTerrainGenerator() const;
	MotionManager* getMotionManager() const;
	//Ogre::Root* getOgreRoot() const;
	EmberEntityFactory* getEntityFactory() const;
	AvatarCamera* getMainCamera() const;
	AvatarController* getAvatarController() const;
	EntityMoveManager* getMoveManager() const;
	
	EmberEntity* getEmberEntity(const std::string & eid);
	
	
	Jesus* getJesus() const;
	
	Ogre::RenderWindow* getRenderWindow() const;
	
	
	sigc::signal<void, EmberOgre::EmberEntityFactory*> EventCreatedEmberEntityFactory;
	sigc::signal<void, EmberOgre::AvatarEmberEntity*> EventCreatedAvatarEntity;
	sigc::signal<void, EmberOgre::Jesus*> EventCreatedJesus;
	
	/**
	 * returns the scenenode of the world entity
	 * throws en exception if no such node has been created
	 * @return 
	 */
	Ogre::SceneNode* getWorldSceneNode() const;
	
	
	/**
	 *    returns the root scene node
	 * @return 
	 */
	Ogre::SceneNode* getRootSceneNode() const;	
	
	sigc::signal<void, EmberOgre::GUIManager&> EventGUIManagerCreated;
	sigc::signal<void, EmberOgre::GUIManager&> EventGUIManagerInitialized;
	
	sigc::signal<void, EmberOgre::MotionManager&> EventMotionManagerCreated;
	
	
	sigc::signal<void, EmberOgre::Terrain::TerrainGenerator&> EventTerrainGeneratorCreated;
	
	sigc::signal<void, EmberOgre::AvatarController&> EventAvatarControllerCreated;
	
	sigc::signal<void> EventSceneCreated;
	
	
};

}
