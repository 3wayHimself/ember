<h1>Dime Client Architecture</h1>

<i>zzorn, 2001-11-14</i><br />
<i>zzorn, 2001-12-02, Updated the architecture to reflect the switch from ParaGui to Meadow, updated the other subsystem descriptions a bit too, and added links.</i>

<p>&nbsp;</p>

<table border="0" cellpadding="5" cellspacing="2" class="architecture" >
    <tr class="uilayer" >
        <td colspan="5">Dime - Facade</td>
    </tr>
    <tr class="uilayer" >
        <td colspan="5">Gorgon - User Interface Layer</td>
    </tr>
    <tr>
        <td class="bussinesslayer" colspan="4">Artemis - Bussiness Layer</td>
        <td class="platformlayer" rowspan="3"><a href="/dev/eng/libraries/meadow">Meadow</a> - GUI Toolkit</td>
    </tr>
    <tr class="platformlayer">
        <td colspan="2">Medusa - Platform Layer</td>
        <td rowspan="2">LibJanus - Virtual UI</td>
    </tr>
    <tr class="platformlayer">
        <td><a href="/dev/eng/libraries/eris">Eris</a> - Session Layer</td>
        <td><a href="/dev/eng/libraries/coal">Coal</a> - Map Management</td>
    </tr>
    <tr class="systemlayer">
        <td colspan="4"><a href="/dev/eng/libraries/atlas_cpp">Atlas-C++</a> - Communication</td>
        <td><a href="http://www.libsdl.org/">SDL</a> - Graphics and Sound</td>
    </tr>
</table>

<h2>Dime</h2>
Sets up Medusa, Artemis, etc.  Loads ini and config files.  Sets up SDL display.  Creates game components according to loaded layouts (or delegates that to Gorgon & Medusa).  Runs main loop, or calls main loop in Meadow.

<h2>Gorgon</h2>
User Interface Layer.  Provides the user interfaces for the different components defined in the Artemis library, using Meadow.  
Contains base classes for the GameViews, GamePanels, etc.
Also contains the different game view and game panel implementations, such as 2D iso view, inventory panel, etc.
(Should we split this into a separate library? Or at least a separate subsystem inside this library?)

<h2>Artemis</h2>
Bussiness layer.  Defines the logic for inventory component, character stats component, 
atlas stream observer component, chat & textual command entry component, etc.

<h2>Medusa</h2>
Platform layer.  Provides Atlas message listening, stores or is used to access models (map caching, entities, avatar control interface), and has a framework for client side prediction modules.
Some of these tasks could be split up into separate subsystems.

<h2><a href="/dev/eng/libraries/coal">Coal</a></h2>
Keeps track of all map data, and converts it to suitable formats for different views.

<h2><a href="/dev/eng/libraries/eris">Eris</a></h2>
A client side session layer for WorldForge; Eris manages much of the generic work required to communicate with an Atlas server. Client developers can extend Eris in a number of ways to rapidly add game and client specific functions, and quickly tie game objects to whatever outpu representation they are using.

<h2>LibJanus</h2>
Janus is a user-interface virtualisation library, which allows UI elements to be passed to clients without knowledge of the display format that will be used. Janus can support diverse back-end toolkits, ranging from simple text controls through traditional widget systems (such as Gtk+ or Qt) to completley custom systems (like libUta).
<p>
This is a protocol for sending GUI descriptions from the server to the client, for game or server specific 
dialogs.
We will create an back-end for it on top of Meadow (as a separate library?).
<table border="1" cellspacing="0" width="99%" class="main">
  <tr> 
    <td class="tdfooter">
      <span class="smallgrey">
      This site is hosted by <br /> <a href="http://www.seul.org/"><img src="http://www.seul.org/images/seul1.jpg" alt="SEUL Project" /></a>
      </span>
    </td>
    <td class="tdfooter">
      <span class="smallgrey">The content on this site is distributed under the terms of the 
      <a href="http://www.gnu.org/copyleft/fdl.html" class="nav">GNU Free Documentation License</a> unless expressly stated otherwise. 
      <br />
      Copyright &copy; 1998-2002 by the authors of each page
      </span>
    </td>
  </tr>
</table>
</body>
</html>
