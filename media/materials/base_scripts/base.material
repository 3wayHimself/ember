//this file contains base material from which other materials can inherit


//A simple material containing a simple diffuse map
material /base/simple
{
  technique General
  {
    pass Main
    {
	  texture_unit DiffuseMap
      {
        texture_alias DiffuseMap
      }
    }
  }
} 

//Just like the /base/simple material, but without culling.
material /base/simple/nonculled : /base/simple
{
  technique General
  {
    pass Main
    {
     cull_hardware none 
     cull_software none
    }
  }
} 

//Just like the /base/simple material, but without culling and with alpha blending.
//Useful for clothes and leaves.
material /base/simple/nonculled/alphablended : /base/simple/nonculled
{
  technique General
  {
    pass Main
    {
     scene_blend alpha_blend 
     alpha_rejection greater_equal 128
    }
  }
} 

material /base/normalmap
{
	technique NormalMapped
	{
		pass Main
		{
			// Vertex program reference
			vertex_program_ref WonderShader_Lim3_Fast_Vert
			{
				param_named scale float 1
			}

			// Fragment program
			fragment_program_ref WonderShader_Lim3_Fast_Frag
			{
				param_named exponent0 float 127
		//           param_named exponent1 float 127
		//           param_named exponent2 float 127
				//If changed, needs adjusting in Fragshader's every lit!!!!!

				param_named scaleBias float4 0.04 -0.02 1 0 

 				param_named ambient float4 0.1 0.1 0.1 1.0
			}
			
			// Base bump map
			texture_unit NormalHeightMap
			{ 
				texture_alias NormalHeightMap
//					texture CC-slateb_NH.dds
					//filtering trilinear
			} 
	
			// Base diffuse texture map 
			texture_unit DiffuseMap
			{ 
		        texture_alias DiffuseMap
					//filtering trilinear
			} 
					
		}
	}
  
  technique General
  {
    pass Main
    {
	  texture_unit DiffuseMap
      {
        texture_alias DiffuseMap
      }
    }
  }
}










material /base/normalmap_example
{ 

  // This is the preferred technique which uses both vertex and 
   // fragment programs, supports coloured lights 
   technique Cg
   { 
      // do the lighting  and bump mapping with parallax pass 
      // NB we don't do decal texture here because this is repeated per light 
      pass 
      { 
       
         // Vertex program reference 
         vertex_program_ref Examples/OffsetMappingVP 
         { 
            param_named_auto lightPosition light_position_object_space 0 
            param_named_auto eyePosition camera_position_object_space 
            param_named_auto worldViewProj worldviewproj_matrix 
         } 

         // Fragment program 
         fragment_program_ref Examples/OffsetMappingFP
         { 
            param_named_auto lightDiffuse light_diffuse_colour 0 
            param_named_auto lightSpecular light_specular_colour 0 
            // Parallax Height scale and bias 
            param_named scaleBias float4 0.04 -0.02 1 0 
         } 
          
         // Normal + height(alpha) map 
         texture_unit NormalHeightMap
         { 
//            texture 3d_objects/items/building_primitives/stone/low/wall_NH.png
//            texture rockwall_NH.tga
            tex_coord_set 0 
         } 

         // Base diffuse texture map 
         texture_unit DiffuseMap
         { 
//            texture 3d_objects/items/building_primitives/stone/low/wall_colormap.png
//            texture rockwall.tga
            tex_coord_set 1 
         } 
      } 
   } 


   // This is the preferred technique which uses both vertex and 
   // fragment programs, supports coloured lights 
   technique Asm
   { 
      // do the lighting  and bump mapping with parallax pass 
      // NB we don't do decal texture here because this is repeated per light 
      pass 
      { 
       
         // Vertex program reference 
         vertex_program_ref Examples/OffsetMappingVP 
         { 
            param_named_auto lightPosition light_position_object_space 0 
            param_named_auto eyePosition camera_position_object_space 
            param_named_auto worldViewProj worldviewproj_matrix 
         } 

         // Fragment program 
         fragment_program_ref Examples/OffsetMappingPS 
         { 
            param_indexed_auto 0 light_diffuse_colour 0 
            param_indexed_auto 1 light_specular_colour 0 
            // Parallax Height scale and bias 
            param_indexed 2 float4 0.04 -0.02 1 0 
         } 
          
         // Normal + height(alpha) map 
         texture_unit NormalHeightMap
         { 
//            texture rockwall_NH.tga
            tex_coord_set 0 
         } 

         // Base diffuse texture map 
         texture_unit DiffuseMap
         { 
//            texture rockwall.tga
            tex_coord_set 1 
         } 
      } 
   } 
   
   // Simple no-shader fallback
   technique 
   { 
      pass 
      { 
         // Base diffuse texture map 
         texture_unit DiffuseMap
         { 
            texture 3d_objects/items/building_primitives/textures/rough_stone/low/stone.png
         } 
	  }
   }

}